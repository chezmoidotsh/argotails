---
name: üöÄ Release Argotails
on:
  workflow_dispatch:
    inputs:
      # trunk-ignore(checkov/CKV_GHA_7): The workflow_dispatch event needs arguments
      dry-run:
        description: Whether to run the workflow in dry-run mode
        required: true
        default: "true"
        type: boolean
      release-tag:
        description: The release tag to publish assets for
        required: true
        type: string

permissions: {}

jobs:
  build-docker-image:
    name: üê≥ Build and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating a release
      packages: write # Required for pushing to GitHub Container Registry
      id-token: write # Required for OIDC authentication

    steps:
      - name: üîç Check if the release tag is valid
        run: |
          if [[ ! "${{ inputs.release-tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid release tag format. Expected format: vX.Y.Z"
            exit 1
          fi

      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: üîë Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ inputs.release-tag }}
            latest

      - name: üïí Get git commit timestamps
        run: |
          echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=format:%ct)" >> "${GITHUB_ENV}"

      - name: üî® Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          load: true
          tags: localhost/${{ github.repository }}:ci
          build-args: |
            ARGOTAILS_VERSION=${{ inputs.release-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          SOURCE_DATE_EPOCH: ${{ env.SOURCE_DATE_EPOCH }}
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_RETENTION_DAYS: 7

      - name: üß™ Test freshly built Docker image
        run: |
          docker run --rm localhost/${{ github.repository }}:ci run --help
          docker run --rm localhost/${{ github.repository }}:ci version | grep -q "${{ inputs.release-tag }}"

      - name: üì¶ Publish Docker image
        id: publish
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.dry-run == false }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ARGOTAILS_VERSION=${{ inputs.release-tag }}
          sbom: true
          provenance: mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          SOURCE_DATE_EPOCH: ${{ env.SOURCE_DATE_EPOCH }}

      - name: üìù Update `deploy/manifests` image
        run: |
          sed -i 's|newTag: .*|newTag: ${{ inputs.release-tag }}|' deploy/manifests/default/kustomization.yaml
          sed -i 's|digest: .*|digest: ${{ steps.publish.outputs.digest }}|' deploy/manifests/default/kustomization.yaml
      - name: üì¶ Commit updated `deploy/manifests` image
        id: commit
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9.1.4
        with:
          add: deploy/manifests/default/kustomization.yaml
          commit: --signoff
          message: ":package:: Update image digest to ${{ steps.publish.outputs.digest }}"
          push: ${{ inputs.dry-run == false }}

      - name: üì¶ Create a Github release
        if: ${{ inputs.dry-run == false }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "${{ inputs.release-tag }}" \
            --title "Argotails - ${{ inputs.release-tag }}" \
            --target "${{ steps.commit.outputs.commit_long_sha }}" \
            --generate-notes \
            --draft
